buildscript {
    ext {  // ext : build.gradle에서 사용하는 전역변수를 설정하겠다는 의미
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 자바와 스프링부트를 사용하기 위해서는 필수인 플러그인
apply plugin : 'java'
apply plugin : 'eclipse'
apply plugin : 'org.springframework.boot'
// 스프링 부트의 의존성들을 관리해주는 플러그인으로 필수임
apply plugin : 'io.spring.dependency-management'        

group 'com.theamabile.webservice'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // 블로그 코드
    //  : A모듈을 수정하게 되면 이 모듈을 직접,간접적으로 의존하고 있는 B,C 모듈을 모두 재빌드
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    // 기본 gradle 코드
    //  : A모듈을 수정하게 되면 이 모듈을 직접적으로 의존하고 있는 B만 재 빌드
    //  - 장점 : 빠르다, API노출? Implementation 사용시 필요한 주요 API만 노출이 되는데, complie 사용 시 모든 api 노출됨
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}